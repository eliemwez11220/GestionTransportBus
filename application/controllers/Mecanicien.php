<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Mecanicien extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Mecanicien_model');
    } 

    /*
     * Listing of mecaniciens
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mecanicien/index?');
        $config['total_rows'] = $this->Mecanicien_model->get_all_mecaniciens_count();
        $this->pagination->initialize($config);

        $data['mecaniciens'] = $this->Mecanicien_model->get_all_mecaniciens($params);
        
        $data['_view'] = 'mecanicien/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new mecanicien
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nomMecanicien','NomMecanicien','required');
		$this->form_validation->set_rules('telephone','Telephone','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nomMecanicien' => $this->input->post('nomMecanicien'),
				'telephone' => $this->input->post('telephone'),
				'adresse' => $this->input->post('adresse'),
				'mec_observation' => $this->input->post('mec_observation'),
            );
            
            $mecanicien_id = $this->Mecanicien_model->add_mecanicien($params);
            redirect('mecanicien/index');
        }
        else
        {            
            $data['_view'] = 'mecanicien/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a mecanicien
     */
    function edit($mec_id)
    {   
        // check if the mecanicien exists before trying to edit it
        $data['mecanicien'] = $this->Mecanicien_model->get_mecanicien($mec_id);
        
        if(isset($data['mecanicien']['mec_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nomMecanicien','NomMecanicien','required');
			$this->form_validation->set_rules('telephone','Telephone','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nomMecanicien' => $this->input->post('nomMecanicien'),
					'telephone' => $this->input->post('telephone'),
					'adresse' => $this->input->post('adresse'),
					'mec_observation' => $this->input->post('mec_observation'),
                );

                $this->Mecanicien_model->update_mecanicien($mec_id,$params);            
                redirect('mecanicien/index');
            }
            else
            {
                $data['_view'] = 'mecanicien/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The mecanicien you are trying to edit does not exist.');
    } 

    /*
     * Deleting mecanicien
     */
    function remove($mec_id)
    {
        $mecanicien = $this->Mecanicien_model->get_mecanicien($mec_id);

        // check if the mecanicien exists before trying to delete it
        if(isset($mecanicien['mec_id']))
        {
            $this->Mecanicien_model->delete_mecanicien($mec_id);
            redirect('mecanicien/index');
        }
        else
            show_error('The mecanicien you are trying to delete does not exist.');
    }
    
}
